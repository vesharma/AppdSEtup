---
  - hosts: localhost
    become: true

    #Plan:
    # Download latest package
    # Copy Setup from jumpserver to tmp location
    # install zip through yum
    # extract file in /opt/appdynamics
    # replace Controller.xml


    vars:
     Setuplocation: "/root/AppDynamics-Setup"
     javaagent: "AppServerAgent-1.8-21.10.0.33144.zip"
     ctrlhost: "llppappdctl.onefiserv.net"
     appname: "Rulemanager-dit1"
     tiervar: "DisputeExpert_Jboss"
     accountaccesskeyvar: "8843970b-03c5-41d6-b2f5-4438ce38bde2"
     Javaagentinstalldir: "/opt/appdynamics/java-agent"
     vervar: "ver21.10.0.33144"
     JbossHostfile: "host.xml"
     destvar: "/tmp/appdynamics"
     Deploymentlocation: "/opt/appdynamics"
     modevar: "775"

    tasks:

    - name: Test ping
      ping: 

    - name: 1. copy javaagent in location
      copy: 
        src:  "{{ Setuplocation }}/{{ item }}"
        dest:  "{{ destvar }}"
        mode: 775
        remote_src: yes
        force: yes
        fail_on_missing: yes
      register: outputcopy
      failed_when: false
      ignore_errors: true
      with_items:
        - "{{ javaagent }}"
        
    - debug:
        msg: " {{ Setuplocation }}/{{ javaagent }}"

    - name: installing zip with yum
      yum:
         name: unzip
         state: latest
      register: yumoutput   
      changed_when: yumoutput.rc != 0  


    - name:  Create directories
      file:
         path: "{{ item }}"
         state: directory
         mode: 775
         recurse: yes
      with_items:
        - "{{ Javaagentinstalldir }}"
      ignore_errors: true
      

    - name: extract setup in /opt/appdynamics
      unarchive: 
         src: "{{ item.src }}"
         dest: "{{ item.dest }}"
      with_items:
       - { src: "{{ Setuplocation }}/{{ javaagent }}" ,dest: "{{ Javaagentinstalldir }}", mode: '775' }
 
    - name: For taking backup
      copy:
         src: "{{ item }}"
         dest: "{{ item }}_{{ansible_date_time.date}}_{{ansible_date_time.time}}"
         backup: true
      with_items:
         - "{{ Javaagentinstalldir }}/conf/controller-info.xml"
         - "{{ Javaagentinstalldir }}/{{vervar}}/conf/controller-info.xml"
      ignore_errors: true


    - name: For replacing /opt/appdynamics/java-agent/conf/controller-info.xml values
      replace:
        path: "{{ Javaagentinstalldir }}/conf/controller-info.xml"
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
      with_items:   
        - { regexp: "<controller-host></controller-host>",replace: "<controller-host> {{ ctrlhost }} </controller-host>" }
        - { regexp: "<controller-port></controller-port>" , replace: "<controller-port>443</controller-port>" }
        - { regexp: "<controller-ssl-enabled></controller-ssl-enabled>" , replace: "<controller-ssl-enabled>true</controller-ssl-enabled>" }
        - { regexp: "<appname></application-name>" , replace: "<application-name> {{ appname }} </application-name>" }
        - { regexp: "<tier-name></tier-name>" , replace: "<tier-name> {{ tiervar }} </tier-name>" }
        - { regexp: "<node-name></node-name>" , replace: "<node-name> </node-name>" }
        - { regexp: "<account-name></account-name>" , replace: "<account-name>customer1</account-name>" }
        - { regexp: "<account-access-key></account-access-key>" , replace: "<account-access-key>{{ accountaccesskeyvar }} </account-access-key>" }
      register: javaagentoutput 
      changed_when: false
      ignore_errors: true
      

    - name: For replacing /opt/appdynamics/java-agent/ver21.4.0.32403/conf/controller-info.xml values
      replace:
         path: "{{ Javaagentinstalldir }}/{{vervar}}/conf/controller-info.xml"
         regexp: "{{ item.regexp }}"
         replace: "{{ item.replace }}"
      with_items:
        - { regexp: "<controller-host></controller-host>" , replace: "<controller-host> {{ ctrlhost }} </controller-host>" }
        - { regexp: "<controller-port></controller-port>" , replace: "<controller-port>443</controller-port>" }
        - { regexp: "<controller-ssl-enabled></controller-ssl-enabled>" , replace: "<controller-ssl-enabled>true</controller-ssl-enabled>" }
        - { regexp: "<appname></application-name>" , replace: "<application-name> {{ appname }} </application-name>" }
        - { regexp: "<tier-name></tier-name>" , replace: "<tier-name> {{ tiervar }} </tier-name>" }
        - { regexp: "<node-name></node-name>" , replace: "<node-name> </node-name>" }
        - { regexp: "<account-name></account-name>" , replace: "<account-name>customer1</account-name>" }
        - { regexp: "<account-access-key></account-access-key>" , replace: "<account-access-key>{{ accountaccesskeyvar }} </account-access-key>" }
      register: Outputjavaagent1
      ignore_errors: yes
      changed_when: false


    - name: Set user and file permissions
      file: 
        path: "{{ item }}"
        mode: 775
        owner: svc-lean
        group: svc-leangrp
      with_items:
        - "{{ Javaagentinstalldir }}"
      register: FilePermissionvar
      ignore_errors: yes

    - name: to add lines in jboss host.xml
      blockinfile:
        dest: "/opt/jboss/domain/configuration/{{JbossHostfile }}"
        block: |
          <!-- Adding Appdynamics configuration -->
          <option value="-javaagent:{{ Javaagentinstalldir }}/javaagent.jar"/>
          <option value="-Dappdynamics.agent.applicationName={{ appname }}"/>
          <option value="-Dappdynamics.agent.tierName={{ tiervar }}"/>
          <!-- End of Appd Configuration -->
        insertbefore: "</jvm-options>"
    

    - name: reload daemon
      shell: systemctl daemon-reload
      ignore_errors: yes

    - name: to restart jboss services
      service: 
        name:  jboss-eap-rhel.sh
        pattern: /etc/init.d/jboss-eap-rhel.sh
        state: restarted
      ignore_errors: yes
